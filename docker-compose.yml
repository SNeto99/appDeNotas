services:

  appdenotas:
    container_name: appdenotas
    image: node:latest
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    # labels:
    #   - "traefik.enable=true"
    #   # Router para HTTP
    #   - "traefik.http.routers.appdenotas.entrypoints=web"
    #   - "traefik.http.routers.appdenotas.rule=Host(`thisisasecret.site`)"
    #   - "traefik.http.routers.appdenotas.middlewares=redirect-to-https"
    #   # Router para HTTPS
    #   - "traefik.http.routers.appdenotas-secure.entrypoints=websecure"
    #   - "traefik.http.routers.appdenotas-secure.rule=Host(`thisisasecret.site`)"
    #   - "traefik.http.routers.appdenotas-secure.tls=true"
    #   - "traefik.http.routers.appdenotas-secure.tls.certresolver=leresolver"
    #   # Middleware para redirecionamento
    #   - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    #   # Servico de Load Balancer
    #   - "traefik.http.services.appdenotas.loadbalancer.server.port=3000"
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      NODE_ENV: ${ENVIRONMENT}
    volumes:
      - ./:/app
    working_dir: /app
    command: bash -c "npm install && npm start"
    # command: bash -c "./entrypoint.sh"
    restart: unless-stopped
    networks:
      - app
      - db-net
      # - web

networks:
  app:
    driver: bridge
  db-net:
    external: true
  # web:
    # external: true